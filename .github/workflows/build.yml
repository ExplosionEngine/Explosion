name: Build

on:
  pull_request:
  workflow_dispatch:
    inputs:
      debug:
        type: boolean
        description: 'Enable TMate Debug'
        required: false
        default: false

env:
  BUILD_TYPE: Release
  MAKE_THREAD_NUM: 16
  CMAKE_VERSION: '3.28.1'

jobs:
  build:
    strategy:
      matrix:
        os: ['windows-latest', 'macOS-latest']

    runs-on: ${{ matrix.os }}

    steps:
      - name: Setup TMate Session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug }}
        with:
          detached: true

      - name: Set XCode Version
        run: sudo xcode-select -s /Library/Developer/CommandLineTools
        if: runner.os == 'macOS'

      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: ${{env.CMAKE_VERSION}}

      - name: Update Cache Files
        uses: actions/cache@v4
        with:
          path: ${{github.workspace}}/ThirdParty/Zip
          key: ${{runner.os}}-3rd-zip

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCI=ON

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -j ${{env.MAKE_THREAD_NUM}}

      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{env.BUILD_TYPE}} --extra-verbose

      - name: Install
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target install -j ${{env.MAKE_THREAD_NUM}}
